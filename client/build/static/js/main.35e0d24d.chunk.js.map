{"version":3,"sources":["components/navbar.js","components/search-form.js","components/action-button.js","components/book-item.js","components/book-list.js","utils/api.js","pages/search.js","pages/saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","SearchForm","onSubmit","handleSubmit","htmlFor","type","id","value","searchString","onChange","handleChange","ActionButton","dataid","handleClick","text","onClick","BookItem","_props$book","book","_props$book$bookId","bookId","_props$book$title","title","_props$book$subtitle","subtitle","_props$book$authors","authors","_props$book$descripti","description","_props$book$image","image","_props$book$link","link","handleActionButtonClick","actionButtonText","target","src","alt","action_button","toString","BookList","_props$books","books","_props$handleActionBu","_props$actionButtonTe","length","role","map","index","key","book_item","baseUrl","api","findBooks","cb","axios","get","concat","then","response","catch","error","getSavedBooks","saveBook","post","deleteBook","delete","parseGoogleBooksResponse","_response$data","data","_response$data$items","items","item","_item$id","_item$volumeInfo","volumeInfo","_item$volumeInfo$titl","_item$volumeInfo$subt","_item$volumeInfo$auth","_item$volumeInfo$desc","_item$volumeInfo$info","infoLink","_item$volumeInfo$imag","imageLinks","_item$volumeInfo$imag2","thumbnail","Search","state","event","_this","setState","preventDefault","err","console","log","handleSaveButtonClick","getAttribute","targetBook","find","search_form","this","book_list","React","Component","Saved","handleDeleteButtonClick","refresh","App","react_router_dom","navbar","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.35e0d24d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-primary\">\r\n            <a className=\"navbar-brand\" href=\"/\">Google Books Search</a>\r\n            <div className=\"navbar-nav\">\r\n                <a className=\"nav-item nav-link\" href=\"/search\">Search</a>\r\n                <a className=\"nav-item nav-link\" href=\"/saved\">Saved</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <label htmlFor=\"searchField\">Search: </label>\r\n                <input type=\"text\"\r\n                    id=\"searchField\"\r\n                    value={props.searchString}\r\n                    onChange={props.handleChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nfunction ActionButton(props) {\r\n    const { dataid, handleClick, text } = props;\r\n\r\n    return (\r\n        <button\r\n            dataid={dataid}\r\n            onClick={handleClick}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport ActionButton from \"./action-button\";\r\n\r\nfunction BookItem(props) {\r\n    const {\r\n        book: {\r\n            bookId = \"\",\r\n            title = \"(No Title)\",\r\n            subtitle = \"\",\r\n            authors = [],\r\n            description = \"\",\r\n            image = \"\",\r\n            link = \"\"\r\n        },\r\n        handleActionButtonClick,\r\n        actionButtonText\r\n    } = props;\r\n\r\n    return (\r\n        < div className=\"row my-3\">\r\n            <div className=\"col-12 col-md-4 col-lg-2\">\r\n                <a href={link} target=\"about:blank\">\r\n                    <img src={image} alt={title} />\r\n                </a>\r\n            </div>\r\n            <div className=\"col\">\r\n                <a href={link} target=\"about:blank\">\r\n                    <h3>{title}</h3>\r\n                    <h4>{subtitle}</h4>\r\n                </a>\r\n                <ActionButton\r\n                    dataid={bookId}\r\n                    handleClick={handleActionButtonClick}\r\n                    text={actionButtonText}\r\n                />\r\n                <p><strong>{authors.toString()}</strong></p>\r\n                <p>{description}</p>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default BookItem;\r\n","import React from \"react\";\r\nimport BookItem from \"./book-item\";\r\n\r\nfunction BookList(props) {\r\n    const {\r\n        books = [],\r\n        handleActionButtonClick = null,\r\n        actionButtonText = \"\"\r\n    } = props;\r\n\r\n    if (books.length > 0) {\r\n        return (\r\n            <div role=\"list\">\r\n                {\r\n                    books.map((book, index) => {\r\n                        return (\r\n                            <div role=\"listitem\" key={index}>\r\n                                <BookItem\r\n                                    book={book}\r\n                                    handleActionButtonClick={handleActionButtonClick}\r\n                                    actionButtonText={actionButtonText}\r\n                                />\r\n                                { // Add a separator after all but the final entry in the list\r\n                                    (index < (books.length - 1))\r\n                                        ? <hr />\r\n                                        : \"\"\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <h4>No Books To Display</h4>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookList;\r\n","import axios from \"axios\";\r\n\r\nconst apiKey = \"AIzaSyDN2taYwD5rUOTnXEVucFgo1tcI6Nvonpk\";\r\nconst baseUrl = \"http://localhost:3001\";\r\n\r\nconst api = {\r\n    findBooks: (title, cb) => {\r\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=${title}&key=${apiKey}`)\r\n            .then(response => cb(null, response))\r\n            .catch(error => cb(error));\r\n    },\r\n\r\n    getSavedBooks: (cb) => {\r\n        axios.get(`${baseUrl}/api/books`)\r\n            .then(response => cb(null, response))\r\n            .catch(error => cb(error));\r\n    },\r\n\r\n    saveBook: (book, cb) => {\r\n        axios.post(`${baseUrl}/api/books`, { book: book })\r\n            .then(response => cb(null, response))\r\n            .catch(error => cb(error));\r\n    },\r\n\r\n    deleteBook: (bookId, cb) => {\r\n        axios.delete(`${baseUrl}/api/books/${bookId}`)\r\n            .then(response => cb(null, response))\r\n            .catch(error => cb(error));\r\n    },\r\n\r\n    parseGoogleBooksResponse: response => {\r\n        // Use destructuring with default values to transform the API response as needed\r\n        const {\r\n            data: {\r\n                items = []\r\n            } = null\r\n        } = response;\r\n\r\n        // Transform each element in the array\r\n        const books = items.map(item => {\r\n            const {\r\n                id = \"\",\r\n                volumeInfo: {\r\n                    title = \"(No Title)\",\r\n                    subtitle = \"\",\r\n                    authors = [],\r\n                    description = \"\",\r\n                    infoLink = \"\",\r\n                    imageLinks: {\r\n                        thumbnail = \"\"\r\n                    } = null\r\n                } = null\r\n            } = item;\r\n\r\n            // Return an object whose keys match the format of our Mongoose Book model\r\n            return ({\r\n                bookId: id,\r\n                title: title,\r\n                subtitle: subtitle,\r\n                authors: authors,\r\n                description: description,\r\n                image: thumbnail,\r\n                link: infoLink\r\n            });\r\n        });\r\n\r\n        // Return the newly formatted array of books\r\n        return books;\r\n    }\r\n};\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport SearchForm from \"../components/search-form\";\r\nimport BookList from \"../components/book-list\";\r\nimport api from \"../utils/api\";\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        searchString: \"\",\r\n        books: []\r\n    };\r\n\r\n    handleChange = event => this.setState({ searchString: event.target.value });\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        api.findBooks(this.state.searchString, (err, response) => {\r\n            if (err) {\r\n                return console.error(err);\r\n            }\r\n\r\n            this.setState({\r\n                books: api.parseGoogleBooksResponse(response)\r\n            });\r\n            console.log(this.state.books);\r\n        });\r\n    };\r\n\r\n    handleSaveButtonClick = event => {\r\n        event.preventDefault();\r\n\r\n        const bookId = event.target.getAttribute(\"dataid\");\r\n        const targetBook = this.state.books.find(book => book.bookId === bookId);\r\n        console.log(\"Book ID: \" + bookId);\r\n        api.saveBook(targetBook, (err, response) => {\r\n            if (err) {\r\n                return console.error(err);\r\n            }\r\n            console.log(response);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Search</h2>\r\n                <SearchForm\r\n                    searchString={this.state.searchString}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                />\r\n                <br />\r\n                <h3>Results</h3>\r\n                <p>Click on a book's title to view it on Google Books. Click the Save button to add the book to your saved books.</p>\r\n                <BookList\r\n                    books={this.state.books}\r\n                    handleActionButtonClick={this.handleSaveButtonClick}\r\n                    actionButtonText=\"Save\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport BookList from \"../components/book-list\";\r\nimport api from \"../utils/api\";\r\n\r\nclass Saved extends React.Component {\r\n    state = {\r\n        books: []\r\n    };\r\n\r\n    handleDeleteButtonClick = event => {\r\n        event.preventDefault();\r\n\r\n        const bookId = event.target.getAttribute(\"dataid\");\r\n\r\n        api.deleteBook(bookId, (err, response) => {\r\n            if (err) {\r\n                return console.error(err);\r\n            }\r\n            \r\n            // Reload the book list after deletion\r\n            this.refresh();\r\n        });\r\n    };\r\n\r\n    refresh = () => {\r\n        api.getSavedBooks((err, response) => {\r\n            if (err) {\r\n                return console.error(err);\r\n            }\r\n            const { data = [] } = response;\r\n            this.setState({ books: data });\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>My Saved Books</h2>\r\n                <br />\r\n                <p>Click on a book to view it on Google Books. Click the Delete button to remove it from your saved book list.</p>\r\n                <BookList\r\n                    books={this.state.books}\r\n                    handleActionButtonClick={this.handleDeleteButtonClick}\r\n                    actionButtonText=\"Delete\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Search from \"./pages/search\";\r\nimport Saved from \"./pages/saved\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Route exact path=\"/\" component={Search} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/saved\" component={Saved} />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}